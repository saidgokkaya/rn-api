// <auto-generated />
using System;
using Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250808090142_mksakla")]
    partial class mksakla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Numarataj.Numarataj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlokAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaddeSokak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisKapi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisKapi2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EskiAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcKapiNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsYeriUnvani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mah")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MahalleId")
                        .HasColumnType("int");

                    b.Property<int>("NumaratajType")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Parsel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcKimlikNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MahalleId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Numarataj");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("RuhsatSinifiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RuhsatSinifiId");

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.DepoBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bilgi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("RuhsatId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RuhsatId");

                    b.ToTable("DepoBilgi");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.FaaliyetKonusu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("FaaliyetKonusu");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Ruhsat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaaliyetKonusuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsyeriUnvani")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Not")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Pafta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parsel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuhsatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuhsatSinifiId")
                        .HasColumnType("int");

                    b.Property<int>("RuhsatTuruId")
                        .HasColumnType("int");

                    b.Property<string>("ScannedFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcKimlikNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VerilisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FaaliyetKonusuId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RuhsatSinifiId");

                    b.HasIndex("RuhsatTuruId");

                    b.ToTable("Ruhsat");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.RuhsatSinifi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("RuhsatTuruId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RuhsatTuruId");

                    b.ToTable("RuhsatSinifi");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.RuhsatTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RuhsatTuru");
                });

            modelBuilder.Entity("Core.Domain.User.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Core.Domain.User.Mahalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Mahalle");
                });

            modelBuilder.Entity("Core.Domain.User.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BelBaskan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BelBaskanTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BelTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumaratajBelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumaratajPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NumaratajView")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RuhsatView")
                        .HasColumnType("bit");

                    b.Property<string>("TaskNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Core.Domain.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Core.Domain.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Core.Domain.User.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Core.Domain.Numarataj.Numarataj", b =>
                {
                    b.HasOne("Core.Domain.User.Mahalle", "Mahalle")
                        .WithMany("Numarataj")
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("Numarataj")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mahalle");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Depo", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("Depo")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Ruhsat.RuhsatSinifi", "RuhsatSinifi")
                        .WithMany("Depo")
                        .HasForeignKey("RuhsatSinifiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("RuhsatSinifi");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.DepoBilgi", b =>
                {
                    b.HasOne("Core.Domain.Ruhsat.Depo", "Depo")
                        .WithMany("DepoBilgi")
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("DepoBilgi")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Domain.Ruhsat.Ruhsat", "Ruhsat")
                        .WithMany("DepoBilgi")
                        .HasForeignKey("RuhsatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("Organization");

                    b.Navigation("Ruhsat");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.FaaliyetKonusu", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("FaaliyetKonusu")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Ruhsat", b =>
                {
                    b.HasOne("Core.Domain.Ruhsat.FaaliyetKonusu", "FaaliyetKonusu")
                        .WithMany("Ruhsat")
                        .HasForeignKey("FaaliyetKonusuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("Ruhsat")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Domain.Ruhsat.RuhsatSinifi", "RuhsatSinifi")
                        .WithMany("Ruhsat")
                        .HasForeignKey("RuhsatSinifiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Core.Domain.Ruhsat.RuhsatTuru", "RuhsatTuru")
                        .WithMany("Ruhsat")
                        .HasForeignKey("RuhsatTuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaaliyetKonusu");

                    b.Navigation("Organization");

                    b.Navigation("RuhsatSinifi");

                    b.Navigation("RuhsatTuru");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.RuhsatSinifi", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("RuhsatSinifi")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Ruhsat.RuhsatTuru", "RuhsatTuru")
                        .WithMany("RuhsatSinifi")
                        .HasForeignKey("RuhsatTuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("RuhsatTuru");
                });

            modelBuilder.Entity("Core.Domain.User.Log", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("Log")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Domain.User.User", "User")
                        .WithMany("Log")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.User.Mahalle", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("Mahalle")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Core.Domain.User.User", b =>
                {
                    b.HasOne("Core.Domain.User.Organization", "Organization")
                        .WithMany("User")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Core.Domain.User.UserRole", b =>
                {
                    b.HasOne("Core.Domain.User.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.User.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Depo", b =>
                {
                    b.Navigation("DepoBilgi");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.FaaliyetKonusu", b =>
                {
                    b.Navigation("Ruhsat");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.Ruhsat", b =>
                {
                    b.Navigation("DepoBilgi");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.RuhsatSinifi", b =>
                {
                    b.Navigation("Depo");

                    b.Navigation("Ruhsat");
                });

            modelBuilder.Entity("Core.Domain.Ruhsat.RuhsatTuru", b =>
                {
                    b.Navigation("Ruhsat");

                    b.Navigation("RuhsatSinifi");
                });

            modelBuilder.Entity("Core.Domain.User.Mahalle", b =>
                {
                    b.Navigation("Numarataj");
                });

            modelBuilder.Entity("Core.Domain.User.Organization", b =>
                {
                    b.Navigation("Depo");

                    b.Navigation("DepoBilgi");

                    b.Navigation("FaaliyetKonusu");

                    b.Navigation("Log");

                    b.Navigation("Mahalle");

                    b.Navigation("Numarataj");

                    b.Navigation("Ruhsat");

                    b.Navigation("RuhsatSinifi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Domain.User.Role", b =>
                {
                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Core.Domain.User.User", b =>
                {
                    b.Navigation("Log");

                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
